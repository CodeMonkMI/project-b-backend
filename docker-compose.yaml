volumes:
  postgres:
  pgadmin:
  kong_data: {}
  rabbitmq_data:

networks:
  my_network:
    driver: bridge
  kong-net:
    name: kong-networks
    driver: bridge

services:
  kong:
    build:
      context: ./kong/config
      dockerfile: Dockerfile
    container_name: kong-gateway
    restart: unless-stopped
    networks:
      # kong-net:
      # ipv4_address: 172.1.1.40
      - kong-net
    environment:
      KONG_DATABASE: "off"
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_DECLARATIVE_CONFIG: "/usr/local/kong/declarative/kong.yml"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
      - "8443:8443"
      - "8444:8444"
    volumes:
      - ./kong/kong.yaml:/usr/local/kong/declarative/kong.yml

  db:
    container_name: database_server
    image: postgres:13
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "auth"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - my_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: on-failure
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
      - "5051:443"
    depends_on:
      - db
    volumes:
      - pgadmin:/var/lib/pgadmin

    networks:
      - my_network

  request:
    container_name: donation-request
    build:
      context: ./services/request
      dockerfile: Dockerfile
    ports:
      - 5001:5001
    environment:
      - SERVICE_NAME=Donation Request Service
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/donation_request_db?schema=public
      - PORT=5001
    volumes:
      - ./services/request:/app
    depends_on:
      - db
      - rabbitmq
    networks:
      - my_network
    command: sh -c "npx prisma migrate dev && yarn dev"

  auth:
    container_name: auth
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    ports:
      - 5005:5005
    environment:
      - SERVICE_NAME=Auth Service
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/auth_db?schema=public
      - PORT=5005
      - JWT_SECRET=my-secret
    volumes:
      - ./services/auth:/app
    depends_on:
      - db
    networks:
      - my_network
    command: sh -c "npx prisma migrate dev && yarn dev"
    platform: linux/amd64

  history:
    container_name: donation-history
    build:
      context: ./services/history
      dockerfile: Dockerfile
    ports:
      - 5002:5002
    environment:
      - PORT=5002
      - SERVICE_NAME=Donation History Service
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/donation_history_db?schema=public
    volumes:
      - ./services/history:/app
    depends_on:
      - db
    networks:
      - my_network
    command: sh -c "npx prisma migrate dev && yarn dev"

  notification:
    container_name: notifications
    build:
      context: ./services/notifications
      dockerfile: Dockerfile
    ports:
      - 5003:5003
    environment:
      - PORT=5003
      - SERVICE_NAME=Notifications Service
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/notification_db?schema=public
    volumes:
      - ./services/notifications:/app
    depends_on:
      - db
    networks:
      - my_network
    command: sh -c "npx prisma migrate dev && yarn dev"

  activity:
    container_name: activity
    build:
      context: ./services/activity
      dockerfile: Dockerfile
    ports:
      - 5004:5004
    environment:
      - PORT=5004
      - SERVICE_NAME='ACTIVITY SERVICE'
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/activity_db?schema=public
    volumes:
      - ./services/activity:/app
    depends_on:
      - db
    networks:
      - my_network
    command: sh -c "npx prisma migrate dev && yarn dev"

  rabbitmq:
    container_name: RabbitMQ
    image: rabbitmq:3.8-management
    ports:
      - "5672:5672" # RabbitMQ main port
      - "15672:15672" # RabbitMQ management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - my_network
